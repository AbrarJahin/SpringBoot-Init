package com.example.xml.xml_sign;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import java.util.Optional;

@Controller    // This means that this class is a Controller
@RequestMapping(path = "/xml") // This means URL's start with /demo (after Application path)
public class XmlSignController {
    @Autowired // This means to get the bean called xmlSignRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private XmlSignRepository xmlSignRepository;

    @PostMapping(path = "/add") // Map ONLY POST Requests
    public @ResponseBody
    XmlSign addNewXmlSign(@RequestParam String token
            , @RequestParam String unsigned_digest) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        XmlSign xmlSign = new XmlSign();
        xmlSign.setToken(token);
        xmlSign.setXmlDigest(unsigned_digest);
        xmlSignRepository.save(xmlSign);
        return xmlSign;
    }

    @PostMapping(path = "/get") // Map ONLY POST Requests
    public @ResponseBody
    Optional<XmlSign> getXmlSignByToken(@RequestParam String token) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        return xmlSignRepository.findByToken(token);
    }

    @GetMapping(path = "/all")
    public @ResponseBody
    Iterable<XmlSign> getAllUsers() {
        // This returns a JSON or XML with the users
        return xmlSignRepository.findAll();
    }
}
